---
title: Getting Started
inMenu: true
directoryName: Documentation
---

h1.  Getting Started

The easiest way to get started with Mongrel is to install it via RubyGems
and then run a Ruby on Rails application.  You can do this easily:

 $ sudo gem install mongrel
 $ cd myrailsapp
 $ mongrel_rails start -d

Which runs Mongrel in the background.  You can stop it with:

 $ mongrel_rails stop

And you're all set.  There's quite a few options you can set for the
start command.  Use the *mongrel_rails start -h* to see them all.


h2. Win32 Install

Windows has a slight difference since it seems that the win32-service doesn't
get picked up for some people as a dependency.  You'll need to do this instead:

 $ gem install win32-service (pick the most recent one)
 $ gem install mongrel (pick the win32 pre-built)

Now you're installed.  "Read the Win32 HOWTO for more instructions.":win32.html


h2. Updating

You should be able to do an *gem update* and get the latest version of Mongrel
on any platform you've already installed it on.  The caveat to this is if
you've been grabbing test releases from any of the authors directly then 
you'll need to *gem uninstall* first to make sure you don't have any buggy
stuff lying around.


h1. Help For Commands

Mongrel uses a fairly comprehensive command/plugin system (documented in the near
future) that has built-in help thanks to optparse.  Just pass a -h to any 
command and it will dump the help for you:

 $ mongrel_rails start -h 
 Usage: start [options]
    -e, --environment ENV            Rails environment to run as
    -d, --daemonize                  Whether to run in the background or not
    -p, --port PORT                  Which port to bind to
    -a, --address ADDR               Address to bind to
    -l, --log FILE                   Where to write log messages
    -P, --pid FILE                   Where to write the PID
    -n, --num-procs INT              Number of processor threads to use
    -t, --timeout SECONDS            Timeout all requests after SECONDS time
    -m, --mime PATH                  A YAML file that lists additional MIME types
    -c, --chdir PATH                 Change to dir before starting (will be expanded)
    -r, --root PATH                  Set the document root (default 'public')
    -h, --help                       Show this message
        --version                    Show version

Also every option has reasonable default options, and will complain if you give 
anything invalid.


h1. Running In Development

Mongrel turns out to be really nice for development since it serves files
much faster than WEBrick.  I'm using it for almost all my development Ruby
on Rails work these days.  What I do is the following:

 $ mongrel_rails start

And then do my work like normal with WEBrick.  You don't get all the logging
and stuff you get with WEBrick (planned for a future release) but otherwise
it's nice and snappy.


h1. More Information

There's a "mailing list":http://rubyforge.org/mailman/listinfo/mongrel-users that
you should subscribe to if you're looking for help or are interested in tracking
Mongrel.  We post announcements of pre-release gems you can play with to this
mailing list and also discuss development of Mongrel there.

Before you start asking for features you should read about 
"bikeshedding":http://www.catb.org/jargon/html/B/bikeshedding.html and 
understand that we're really nice, but sometimes code speaks better than rhetoric.

Finally there's lots of other "documentation.":index.html